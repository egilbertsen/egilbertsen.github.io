{"ast":null,"code":"var _jsxFileName = \"/Users/emilygilbertsen/Desktop/Personal Work/egilbertsen.github.io/client/src/pages/Work/index.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport ProjectCard from \"../../components/ProjectCard\";\n\nclass Work extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: []\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        projects: [{\n          name: \"Bookshelf\",\n          image: \"\",\n          description: \"A React app that allows a user to query Google Books and save items of interest to a MongoDB.\",\n          repoLink: \"https://github.com/egilbertsen/bookshelf\",\n          appLink: \"\"\n        }, {\n          name: \"Weather-Or-Not\",\n          image: \"\",\n          description: \"A weather app that uses Chart.js to help the user understand upcoming weather conditions.\",\n          repoLink: \"https://github.com/egilbertsen/weather-or-not\",\n          appLink: \"https://egilbertsen.github.io/weather-or-not/\"\n        }, {\n          name: \"Budget\",\n          image: \"\",\n          description: \"A budgeting app that provides charting of cashflow and allows for offline caching.\",\n          repoLink: \"https://github.com/egilbertsen/budget\",\n          appLink: \"https://desolate-ridge-68330.herokuapp.com/\"\n        }, {\n          name: \"Jeopardize\",\n          image: \"\",\n          description: \"A Jeopardy training app, my contribution to which was a user authentication system with encryption.\",\n          repoLink: \"https://github.com/egilbertsen/Jeopardize\",\n          appLink: \"\"\n        }]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Work\")))), this.state.projects.length ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-12\",\n      className: \"projectContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, this.state.projects.map(project => /*#__PURE__*/React.createElement(ProjectCard, {\n      name: project.name,\n      repoLink: project.repoLink,\n      appLink: project.appLink,\n      description: project.description,\n      image: project.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"No saved books to display\"))));\n  }\n\n}\n\nexport default Work;","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/Personal Work/egilbertsen.github.io/client/src/pages/Work/index.js"],"names":["React","Component","Jumbotron","Col","Row","Container","ProjectCard","Work","state","projects","componentDidMount","setState","name","image","description","repoLink","appLink","render","length","map","project"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport ProjectCard from \"../../components/ProjectCard\";\n\nclass Work extends Component {\n\n  state = {\n    projects: []\n  };\n  \n  componentDidMount = () => {\n    this.setState({\n          projects: [\n            {\n              name: \"Bookshelf\",\n              image: \"\",\n              description: \"A React app that allows a user to query Google Books and save items of interest to a MongoDB.\",\n              repoLink: \"https://github.com/egilbertsen/bookshelf\",\n              appLink: \"\"\n            },\n            {\n              name: \"Weather-Or-Not\",\n              image: \"\",\n              description: \"A weather app that uses Chart.js to help the user understand upcoming weather conditions.\",\n              repoLink: \"https://github.com/egilbertsen/weather-or-not\",\n              appLink: \"https://egilbertsen.github.io/weather-or-not/\"\n            },\n            {\n              name: \"Budget\",\n              image: \"\",\n              description: \"A budgeting app that provides charting of cashflow and allows for offline caching.\",\n              repoLink: \"https://github.com/egilbertsen/budget\",\n              appLink: \"https://desolate-ridge-68330.herokuapp.com/\"\n            },\n            {\n              name: \"Jeopardize\",\n              image: \"\",\n              description: \"A Jeopardy training app, my contribution to which was a user authentication system with encryption.\",\n              repoLink: \"https://github.com/egilbertsen/Jeopardize\",\n              appLink: \"\"\n            }\n          ]\n        })\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Row>\n              <Col size=\"md-12\">\n                <Jumbotron>\n                  <h1>Work</h1>\n                </Jumbotron>\n              </Col>  \n            </Row>\n            {this.state.projects.length ? (\n              <Row>\n                <Col size=\"md-12\" className=\"projectContainer\">\n                {this.state.projects.map(project => (\n                  <ProjectCard \n                    name = {project.name}\n                    repoLink = {project.repoLink}\n                    appLink = {project.appLink}\n                    description = {project.description}\n                    image = {project.image}\n                  />\n                ))}  \n                </Col>\n              </Row>\n            ) : (\n                <h3>No saved books to display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\nexport default Work;\n"]},"metadata":{},"sourceType":"module"}