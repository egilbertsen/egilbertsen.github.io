{"ast":null,"code":"import React,{Component}from\"react\";import Jumbotron from\"../components/Jumbotron\";import{Col,Row,Container}from\"../components/Grid\";import ProjectCard from\"../components/ProjectCard\";class Shelf extends Component{constructor(...args){super(...args);this.state={projects:[]};this.componentDidMount=()=>{this.setState({projects:[{name:\"Bookshelf\",image:\"\",description:\"A React app that allows a user to query Google Books and save items of interest to a MongoDB.\",repoLink:\"https://github.com/egilbertsen/bookshelf\",appLink:\"\"},{name:\"Weather-Or-Not\",image:\"\",description:\"A weather app that uses Chart.js to help the user understand upcoming weather conditions.\",repoLink:\"https://github.com/egilbertsen/weather-or-not\",appLink:\"https://egilbertsen.github.io/weather-or-not/\"},{name:\"Budget\",image:\"\",description:\"A budgeting app that provides charting of cashflow and allows for offline caching.\",repoLink:\"https://github.com/egilbertsen/budget\",appLink:\"https://desolate-ridge-68330.herokuapp.com/\"},{name:\"Jeopardize\",image:\"\",description:\"A Jeopardy training app, my contribution to which was a user authentication system with encryption.\",repoLink:\"https://github.com/egilbertsen/Jeopardize\",appLink:\"\"}]});};}render(){return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-12\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-12\"},/*#__PURE__*/React.createElement(Jumbotron,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Work\")))),this.state.projects.length?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{size:\"md-12\",className:\"projectContainer\"},this.state.projects.map(project=>/*#__PURE__*/React.createElement(ProjectCard,{name:project.name,repoLink:project.repoLink,appLink:project.appLink,description:project.description,image:project.image})))):/*#__PURE__*/React.createElement(\"h3\",null,\"No saved books to display\"))));}}export default Shelf;","map":{"version":3,"sources":["/Users/emilygilbertsen/Desktop/Personal Work/portfolio/client/src/pages/Work.js"],"names":["React","Component","Jumbotron","Col","Row","Container","ProjectCard","Shelf","state","projects","componentDidMount","setState","name","image","description","repoLink","appLink","render","length","map","project"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,oBAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA,KAAMC,CAAAA,KAAN,QAAoBN,CAAAA,SAAU,0CAE5BO,KAF4B,CAEpB,CACNC,QAAQ,CAAE,EADJ,CAFoB,MAM5BC,iBAN4B,CAMR,IAAM,CACxB,KAAKC,QAAL,CAAc,CACRF,QAAQ,CAAE,CACR,CACEG,IAAI,CAAE,WADR,CAEEC,KAAK,CAAE,EAFT,CAGEC,WAAW,CAAE,+FAHf,CAIEC,QAAQ,CAAE,0CAJZ,CAKEC,OAAO,CAAE,EALX,CADQ,CAQR,CACEJ,IAAI,CAAE,gBADR,CAEEC,KAAK,CAAE,EAFT,CAGEC,WAAW,CAAE,2FAHf,CAIEC,QAAQ,CAAE,+CAJZ,CAKEC,OAAO,CAAE,+CALX,CARQ,CAeR,CACEJ,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,EAFT,CAGEC,WAAW,CAAE,oFAHf,CAIEC,QAAQ,CAAE,uCAJZ,CAKEC,OAAO,CAAE,6CALX,CAfQ,CAsBR,CACEJ,IAAI,CAAE,YADR,CAEEC,KAAK,CAAE,EAFT,CAGEC,WAAW,CAAE,qGAHf,CAIEC,QAAQ,CAAE,2CAJZ,CAKEC,OAAO,CAAE,EALX,CAtBQ,CADF,CAAd,EAgCD,CAvC2B,EAyC5BC,MAAM,EAAG,CACP,mBACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAC,OAAV,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAC,OAAV,eACE,oBAAC,SAAD,mBACE,qCADF,CADF,CADF,CADF,CAQG,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,MAApB,cACC,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAC,OAAV,CAAkB,SAAS,CAAC,kBAA5B,EACC,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,eAC9B,oBAAC,WAAD,EACE,IAAI,CAAIA,OAAO,CAACR,IADlB,CAEE,QAAQ,CAAIQ,OAAO,CAACL,QAFtB,CAGE,OAAO,CAAIK,OAAO,CAACJ,OAHrB,CAIE,WAAW,CAAII,OAAO,CAACN,WAJzB,CAKE,KAAK,CAAIM,OAAO,CAACP,KALnB,EADD,CADD,CADF,CADD,cAeG,0DAvBN,CADF,CADF,CADF,CAgCD,CA1E2B,CA4E9B,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport ProjectCard from \"../components/ProjectCard\";\n\nclass Shelf extends Component {\n\n  state = {\n    projects: []\n  };\n  \n  componentDidMount = () => {\n    this.setState({\n          projects: [\n            {\n              name: \"Bookshelf\",\n              image: \"\",\n              description: \"A React app that allows a user to query Google Books and save items of interest to a MongoDB.\",\n              repoLink: \"https://github.com/egilbertsen/bookshelf\",\n              appLink: \"\"\n            },\n            {\n              name: \"Weather-Or-Not\",\n              image: \"\",\n              description: \"A weather app that uses Chart.js to help the user understand upcoming weather conditions.\",\n              repoLink: \"https://github.com/egilbertsen/weather-or-not\",\n              appLink: \"https://egilbertsen.github.io/weather-or-not/\"\n            },\n            {\n              name: \"Budget\",\n              image: \"\",\n              description: \"A budgeting app that provides charting of cashflow and allows for offline caching.\",\n              repoLink: \"https://github.com/egilbertsen/budget\",\n              appLink: \"https://desolate-ridge-68330.herokuapp.com/\"\n            },\n            {\n              name: \"Jeopardize\",\n              image: \"\",\n              description: \"A Jeopardy training app, my contribution to which was a user authentication system with encryption.\",\n              repoLink: \"https://github.com/egilbertsen/Jeopardize\",\n              appLink: \"\"\n            }\n          ]\n        })\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Row>\n              <Col size=\"md-12\">\n                <Jumbotron>\n                  <h1>Work</h1>\n                </Jumbotron>\n              </Col>  \n            </Row>\n            {this.state.projects.length ? (\n              <Row>\n                <Col size=\"md-12\" className=\"projectContainer\">\n                {this.state.projects.map(project => (\n                  <ProjectCard \n                    name = {project.name}\n                    repoLink = {project.repoLink}\n                    appLink = {project.appLink}\n                    description = {project.description}\n                    image = {project.image}\n                  />\n                ))}  \n                </Col>\n              </Row>\n            ) : (\n                <h3>No saved books to display</h3>\n              )}\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\nexport default Shelf;\n"]},"metadata":{},"sourceType":"module"}